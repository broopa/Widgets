{"ast":null,"code":"var _jsxFileName = \"/Users/broopa/Documents/Random_Things/Continued Learning/React:Redux/Widgets/src/components/Translate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Dropdown from './Dropdown';\nconst options = [{\n  label: 'Afrikaans',\n  value: 'af'\n}, {\n  label: 'Arabic',\n  value: 'ar'\n}, {\n  label: 'German',\n  value: 'de'\n}];\n\nconst Translate = () => {\n  _s();\n\n  const [language, setLanguage] = useState(options[0]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    selected: language,\n    onSelectedChange: setLanguage,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 8\n    }\n  }));\n};\n\n_s(Translate, \"UYI9cm/6CGJMXv3SKx4PctD5XM4=\");\n\n_c = Translate;\nexport default Translate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Translate\");","map":{"version":3,"sources":["/Users/broopa/Documents/Random_Things/Continued Learning/React:Redux/Widgets/src/components/Translate.js"],"names":["React","useState","Dropdown","options","label","value","Translate","language","setLanguage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,OAAO,GAAE,CACX;AACIC,EAAAA,KAAK,EAAE,WADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CADW,EAKX;AACID,EAAAA,KAAK,EAAE,QADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CALW,EASX;AACID,EAAAA,KAAK,EAAE,QADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CATW,CAAf;;AAeA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAACE,OAAO,CAAC,CAAD,CAAR,CAAxC;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACD,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEI,QAApB;AAA8B,IAAA,gBAAgB,EAAEC,WAAhD;AAA6D,IAAA,OAAO,EAAEL,OAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,CADJ;AAKH,CARD;;GAAMG,S;;KAAAA,S;AAUN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport Dropdown from './Dropdown';\n\nconst options =[\n    {\n        label: 'Afrikaans',\n        value: 'af'\n    },\n    {\n        label: 'Arabic',\n        value: 'ar'\n    },\n    {\n        label: 'German',\n        value: 'de'\n    }\n];\n\nconst Translate = () => {\n    const [language, setLanguage] = useState(options[0]);\n\n    return (\n        <div>\n       <Dropdown selected={language} onSelectedChange={setLanguage} options={options} />\n        </div>\n    );\n};\n\nexport default Translate;"]},"metadata":{},"sourceType":"module"}