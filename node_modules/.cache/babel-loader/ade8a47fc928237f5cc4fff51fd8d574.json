{"ast":null,"code":"var _jsxFileName = \"/Users/broopa/Documents/Random_Things/Continued Learning/React:Redux/Widgets/src/components/Dropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\n\nconst Dropdown = ({\n  options,\n  selected,\n  onSelectedChange\n}) => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const ref = useRef();\n  useEffect(() => {\n    const onBodyClick = event => {\n      if (ref.current.contains(event.target)) {\n        return;\n      }\n\n      setOpen(false);\n    };\n\n    document.body.addEventListener(\"click\", onBodyClick, {\n      capture: true\n    });\n    return () => {\n      document.body.removeEventListener(\"click\", onBodyClick, {\n        capture: true\n      });\n    };\n  }, []);\n  const renderedOptions = options.map(option => {\n    if (option.value === selected.value) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: option.value,\n      className: \"item\",\n      onClick: () => onSelectedChange(option),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, option.label);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui form\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, label), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setOpen(!open),\n    className: `ui selection dropdown ${open ? 'visible active' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"dropdown icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, selected.label), /*#__PURE__*/React.createElement(\"div\", {\n    className: `menu ${open ? 'visible transition' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, renderedOptions))));\n};\n\n_s(Dropdown, \"wl9VvfhnMVWQ+kCekFjcRPEi3/0=\");\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["/Users/broopa/Documents/Random_Things/Continued Learning/React:Redux/Widgets/src/components/Dropdown.js"],"names":["React","useState","useEffect","useRef","Dropdown","options","selected","onSelectedChange","open","setOpen","ref","onBodyClick","event","current","contains","target","document","body","addEventListener","capture","removeEventListener","renderedOptions","map","option","value","label"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAAD,KAA6C;AAAA;;AAC1D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMS,GAAG,GAAGP,MAAM,EAAlB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,WAAW,GAAIC,KAAD,IAAW;AAC7B,UAAIF,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAAJ,EAAwC;AACtC;AACD;;AACDN,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD,KALD;;AAMAO,IAAAA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,OAA/B,EAAwCP,WAAxC,EAAqD;AAAEQ,MAAAA,OAAO,EAAE;AAAX,KAArD;AAEA,WAAO,MAAM;AACXH,MAAAA,QAAQ,CAACC,IAAT,CAAcG,mBAAd,CAAkC,OAAlC,EAA2CT,WAA3C,EAAwD;AACtDQ,QAAAA,OAAO,EAAE;AAD6C,OAAxD;AAGD,KAJD;AAKD,GAdM,EAcJ,EAdI,CAAT;AAgBA,QAAME,eAAe,GAAGhB,OAAO,CAACiB,GAAR,CAAaC,MAAD,IAAY;AAC5C,QAAIA,MAAM,CAACC,KAAP,KAAiBlB,QAAQ,CAACkB,KAA9B,EAAqC;AACjC,aAAO,IAAP;AACH;;AACD,wBACI;AACA,MAAA,GAAG,EAAED,MAAM,CAACC,KADZ;AAEA,MAAA,SAAS,EAAC,MAFV;AAGA,MAAA,OAAO,EAAE,MAAMjB,gBAAgB,CAACgB,MAAD,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKKA,MAAM,CAACE,KALZ,CADJ;AASH,GAbuB,CAAxB;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,GAAG,EAAEf,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2Be,KAA3B,CADJ,eAEI;AAAK,IAAA,OAAO,EAAE,MAAMhB,OAAO,CAAC,CAACD,IAAF,CAA3B;AACA,IAAA,SAAS,EAAG,yBAAwBA,IAAI,GAAG,gBAAH,GAAsB,EAAG,EADjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBF,QAAQ,CAACmB,KAAhC,CAHJ,eAII;AAAK,IAAA,SAAS,EAAG,QAAOjB,IAAI,GAAG,oBAAH,GAA0B,EAAG,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKa,eADL,CAJJ,CAFJ,CADJ,CADJ;AAeH,CAlDD;;GAAMjB,Q;;KAAAA,Q;AAoDN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\n\nconst Dropdown = ({ options, selected, onSelectedChange }) => {\n    const [open, setOpen] = useState(false);\n    const ref = useRef();\n\n    useEffect(() => {\n        const onBodyClick = (event) => {\n          if (ref.current.contains(event.target)) {\n            return;\n          }\n          setOpen(false);\n        };\n        document.body.addEventListener(\"click\", onBodyClick, { capture: true });\n     \n        return () => {\n          document.body.removeEventListener(\"click\", onBodyClick, {\n            capture: true,\n          });\n        };\n      }, []);\n    \n    const renderedOptions = options.map((option) => {\n        if (option.value === selected.value) {\n            return null;\n        }\n        return (\n            <div \n            key={option.value} \n            className=\"item\"\n            onClick={() => onSelectedChange(option)}\n            >\n                {option.label}\n            </div>\n        );\n    });\n\n    return (\n        <div className=\"ui form\" ref={ref} >\n            <div className=\"field\">\n                <label className=\"label\">{ label }</label>\n                <div onClick={() => setOpen(!open)} \n                className={`ui selection dropdown ${open ? 'visible active' : ''}`}>\n                    <i className=\"dropdown icon\"></i>\n                    <div className=\"text\">{selected.label}</div>\n                    <div className={`menu ${open ? 'visible transition' : ''}`}>\n                        {renderedOptions}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}